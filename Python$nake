from graphics import *

# configurations for Python $nake
width = 400
gridHeight = width
height = 470
timer = False
game = True
score = 0
bonus = 0
x = 70
y = 30
radius = 10
length = radius * 2
playerLength = 3
poisonLength = playerLength
i = 0
k = 0
pointRadius = 5
points = False
FruitPoints = False
key = "Right"
countDown = 0

# set coordinations for the $NAKE
cX = 90
cY = 30
coordX = [10]
coordY = [10]
import random
while coordX[len(coordX)-1] != width-10:
    cX+=20
    coordX.append(cX)
while coordY[len(coordY)-1] != 390:
    cY+=20
    coordY.append(cY)
    randomX = random.choice(coordX)
    randomY = random.choice(coordY)
    FruitRandomX = random.choice(coordX)
    FruitRandomY = random.choice(coordY)
    FruitRandomX = random.choice(coordX)
    FruitRandomY = random.choice(coordY)

# This will do the window set up
win = GraphWin("PYTHON $NAKE", width, height, autoflush = False)
win.setBackground(color_rgb(15,15,15))

# The grid for PYTHON $NAKE
lineX = 20
while lineX < width:
    gridX = Line(Point(lineX,0),Point(lineX,gridHeight))
    gridX.setOutline(color_rgb(25,25,25))
    gridX.draw(win)
    lineX += 20
lineY = 20
while lineY <= gridHeight:
    gridX = Line(Point(0,lineY),Point(width,lineY))
    gridX.setOutline(color_rgb(25,25,25))
    gridX.draw(win)
    lineY += 20

# This will display the Python PYTHON $NAKE
UI = Rectangle(Point(0,400),Point(width,height))
UI.setFill(color_rgb(102,51,0))
UI.setOutline(color_rgb(102,51,0))
UI.draw(win)
snakeTitle = Text(Point(width/2,420),"PYTHON $NAKE")
snakeTitle.setTextColor("green")
snakeTitle.setSize(20)
snakeTitle.draw(win)
scoreTitle = Text(Point(320,424),"SCORE!!")
scoreTitle.setTextColor("white")
scoreTitle.setSize(10)
scoreTitle.draw(win)
scoreUI = Text(Point(320,435),score)
scoreUI.setTextColor("white")
scoreUI.setSize(10)
scoreUI.draw(win)

# This will make the player
player = {}
player[0] = Rectangle(Point(x-20-radius,y-radius), Point(x-20+radius, y+radius))
player[1] = Rectangle(Point(x-40-radius,y-radius), Point(x-40+radius, y+radius))
player[2] = Rectangle(Point(x-60-radius,y-radius), Point(x-60+radius, y+radius))

# This will create poison it will be complete later on. 
poison = {}

pass
#Main Game
import keyboard
def main():
    global timer,scoreUI, score, bonus, playerLength, poisonLength, x, y, points, FruitPoints, randomX, randomY, FruitRandomX , FruitRandomYpoisonRandomX , poisonRandomY, key, countDown, k, game

    while(game==True):
        # The SCORE! update
        scoreUI.undraw()
        scoreUI = Text(Point(320,435),score)
        scoreUI.setTextColor("GREY")
        scoreUI.setSize(10)
        scoreUI.draw(win)

        # This will generate new body blocks
        if len(player) < playerLength:
            i+=1
            player[i] = player[i-1].clone()

        # body following player
        player[0].undraw()
        for i in range(1,len(player)):
            player[len(player)-i].undraw()
            player[len(player)-i] = player[len(player)-i-1].clone()
            player[len(player)-i].draw(win)

        # This will Update player's head coordinate
        player[0] = Rectangle(Point(x-radius,y-radius), Point(x+radius,y+radius))
        player[0].setFill("Cyan")
        player[0].setWidth(2)
        player[0].draw(win)

        # This is the player movement, using KeyBoard! I tried making with maouse but for some reason it didn't run
        if keyboard.is_pressed("Up") and key != "Down":
            key = "Up"
        elif keyboard.is_pressed("Left") and key != "Right":
            key = "Left"
        elif keyboard.is_pressed("Down") and key != "Up":
            key = "Down"
        elif keyboard.is_pressed("Right") and key != "Left":
            key = "Right"
        if key == "Up":
            y -= length
        elif key == "Left":
            x -= length
        elif key == "Down":
            y += length
        elif key == "Right":
            x += length

        # This will display the points
        if points == False: # This will automatically generates a new point when the PYTHON $NAKE has eaten a fruit
            point = Rectangle(Point(randomX-pointRadius,randomY-pointRadius),Point(randomX+pointRadius,randomY+pointRadius))
            point.setFill("white")
            point.setWidth(2)
            point.draw(win)
            points = True
        if player[0].getCenter().getX() == point.getCenter().getX() and player[0].getCenter().getY() == point.getCenter().getY(): # when player eats the Fruit
            point.undraw()
            playerLength += 1
            poisonLength += 1
            score += 200+bonus
            randomX = random.choice(coordX)
            randomY = random.choice(coordY)
            for i in range(len(player)):
                if (point.getCenter().getX() == player[i].getCenter().getX() and point.getCenter().getY() == player[i].getCenter().getY()) or (FruitPoints == True and FruitPoint.getCenter().getX() == point.getCenter().getX() and FruitPoint.getCenter().getY() == point.getCenter().getY()): 
                    randomX = random.choice(coordX)
                    randomY = random.choice(coordY)
            for i in range(len(poison)): # This will regenerate x and y coordinate if point shares the same coordinate to other array of poisons
                if point.getCenter().getX() == poison[i].getCenter().getX() and point.getCenter().getY() == poison[i].getCenter().getY():
                    FruitRandomX = random.choice(coordX)
                    FruitRandomY = random.choice(coordY)
            points = False

        # Fruits settings
        if countDown == 150:
            countDown = 0
            if FruitPoints == False: # generates new fruits from countdown
                FruitPoint = Rectangle(Point(FruitRandomX-pointRadius,FruitRandomY-pointRadius),Point(FruitRandomX+pointRadius,FruitRandomY+pointRadius))
                FruitPoint.setFill(color_rgb(213,0,50))
                FruitPoint.setWidth(2)
                FruitPoint.draw(win)
                FruitPoints = True
            if FruitPoints == True:
                for i in range(2, 6): # The fruits will blink between countdown 40 to 100
                    if countDown == 20*i:
                        FruitPoint.undraw()
                    elif countDown == 10+(20*i):
                        FruitsPoint.draw(win)
            if countDown >= 100: # when countdown becomes 100, remove Fruits and reset count down
                FruitPoints = False
                countDown = 0
                FruitRandomX = random.choice(coordX)
                FruitRandomY = random.choice(coordY)
            if FruitPoints==True and player[0].getCenter().getX() == FruitPoint.getCenter().getX() and player[0].getCenter().getY() == FruitPoint.getCenter().getY(): # This works when player eats the Fruit
                FruitPoint.undraw()
                score += 500
                FruitRandomX = random.choice(coordX)
                FruitRandomY = random.choice(coordY)
                
                for i in range(len(player)):
                    if (FruitPoint.getCenter().getX() == player[i].getCenter().getX() and FruitPoint.getCenter().getY() == player[i].getCenter().getY()) or (FruitPoint.getCenter().getX() == point.getCenter().getX() and FruitPoint.getCenter().getY() == point.getCenter().getY()): 
                        FruitRandomX = random.choice(coordX)
                        FruitRandomY = random.choice(coordY)
                        
                for i in range(len(poison)): # regenerate x and y coordinate if Fruit shares the same coordinate to other array of poisons
                    if FruitPoint.getCenter().getX() == poison[i].getCenter().getX() and FruitPoint.getCenter().getY() == poison[i].getCenter().getY():
                        FruitRandomX = random.choice(coordX)
                        FruitRandomY = random.choice(coordY)
                        FruitPoints = False

        #This will complete Poison command at the beggining of the program 
        if poisonLength % 5 == 0: # This will generate a poison block each time the player size reaches the multiple of 5
            poison[k] = Rectangle(Point(poisonRandomX-pointRadius,poisonRandomY-pointRadius),Point(poisonRandomX+pointRadius,poisonRandomY+pointRadius))
            poison[k].setFill("Purple")
            poison[k].setWidth(2)
            poison[k].draw(win)
            poisonRandomX = random.choice(coordX)
            poisonRandomY = random.choice(coordY)
            for i in range(len(player)):
                if (poison[k].getCenter().getX() == player[i].getCenter().getX() and poison[k].getCenter().getY() == player[i].getCenter().getY()) or (poison[k].getCenter().getX() == point.getCenter().getX() and poison[k].getCenter().getY() == point.getCenter().getY()) or (FruitPoints==True and poison[k].getCenter().getX() == FruitPoint.getCenter().getX() and poison[k].getCenter().getY() == FruitPoint.getCenter().getY()):
                        poisonRandomX = random.choice(coordX)
                        poisonRandomY = random.choice(coordY)
                        
                        for i in range(len(poison)):
                            if poison[k].getCenter().getX() == poison[i].getCenter().getX() and poison[k].getCenter().getY() == poison[i].getCenter().getY(): # regenerate x and y coordinates
                                poisonRandomX = random.choice(coordX)
                                poisonRandomY = random.choice(coordY)
                                bonus+=50
                                k+=1
                                poisonLength+=1

        #This are the GAME OVER requirements
        for i in range(len(poison)): # if player touches poison
            if player[0].getCenter().getX() == poison[i].getCenter().getX() and player[0].getCenter().getY() == poison[i].getCenter().getY():
                game = False
        for i in range(2, len(player)): # if player touches its own body or reach out of window
            if (player[0].getCenter().getX() == player[i].getCenter().getX() and player[0].getCenter().getY() == player[i].getCenter().getY()) or x < 0 or x > width or y < 0 or y > gridHeight:
                game = False

        # Frames Per Second
        update(10)
        countDown += 1


    # GAME OVER
    gameOver = Text(Point(width/2,200), "GAME OVER!! :( ")
    gameOver.setTextColor("red")
    gameOver.setSize(30)
    gameOver.draw(win)
    update()
    time.sleep(2)
    win.close()

main()
